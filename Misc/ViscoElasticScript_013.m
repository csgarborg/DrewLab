%% simulate several different viscoelastic model paramter settins
close all
clear all

%% simulation parameters
dt=.05;
maxt=500;
tau_sm=2;

%%
VB_params(1).dt=dt;
VB_params(1).maxt=maxt;
VB_params(1).stress_bp=(.1333*30); %% 30mmHg
the_time=VB_params(1).dt:VB_params(1).dt:VB_params(1).maxt; % time vector for plotting
VB_params(1).stress_0=2*VB_params(1).stress_bp;

%% generate tension changes
vasomotion_times=[1 41];
impulse_response_times=[51 52];
sustained_response_times=[70 73 75];
constriction_times=[140 145];
isoflurane_times=[170 400];
isoflurane_step_time=30;
impulse_step_time=0.5;

% tension generated by the contractile element
the_A=2*VB_params(1).stress_bp*ones(size(the_time));

%%% vasomotion
the_A((vasomotion_times(1)/VB_params(1).dt):(vasomotion_times(2)/VB_params(1).dt))=...
    (1+.1*sin(2*pi*(1:length((vasomotion_times(1)/VB_params(1).dt):(vasomotion_times(2)/VB_params(1).dt)))*dt*.3))*VB_params(1).stress_0;

% impulse response
the_A(impulse_response_times(1)/VB_params(1).dt:(impulse_response_times(1)+impulse_step_time)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(0,-.65,length(impulse_response_times(1)/VB_params(1).dt:(impulse_response_times(1)+impulse_step_time)/VB_params(1).dt)));%
the_A((impulse_response_times(1)+impulse_step_time)/VB_params(1).dt:impulse_response_times(2)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(-.65,0,length((impulse_response_times(1)+impulse_step_time)/VB_params(1).dt:impulse_response_times(2)/VB_params(1).dt)));%

%the_A(52/VB_params(1).dt:53/VB_params(1).dt)=VB_params(1).stress_0*(1+linspace(-.5,0,length(52/VB_params(1).dt:53/VB_params(1).dt)));
%sustained response
the_A(sustained_response_times(1)/VB_params(1).dt:(sustained_response_times(1)+1)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(0,-.55,length(sustained_response_times(1)/VB_params(1).dt:(sustained_response_times(1)+1)/VB_params(1).dt)));
the_A((sustained_response_times(1)+1)/VB_params(1).dt:(sustained_response_times(2))/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(-.55,-.4,length((sustained_response_times(1)+1)/VB_params(1).dt:(sustained_response_times(2)/VB_params(1).dt))));
the_A((sustained_response_times(2))/VB_params(1).dt:(sustained_response_times(3))/VB_params(1).dt)=VB_params(1).stress_0*.6;
the_A(sustained_response_times(3)/VB_params(1).dt:(sustained_response_times(3)+1)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(-.4,0,length(sustained_response_times(3)/VB_params(1).dt:(sustained_response_times(3)+1)/VB_params(1).dt)));

% constriction
the_A((constriction_times(1)/VB_params(1).dt):(constriction_times(1)+1)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(0,.2,length((constriction_times(1)/VB_params(1).dt):(constriction_times(1)+1)/VB_params(1).dt)));
the_A((constriction_times(1)+1)/VB_params(1).dt:(constriction_times(2))/VB_params(1).dt)=1.2*VB_params(1).stress_0;
the_A((constriction_times(2)/VB_params(1).dt):(constriction_times(2)+1)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(.2,0,length((constriction_times(2)/VB_params(1).dt):(constriction_times(2)+1)/VB_params(1).dt)));

% isoflurane
the_A((isoflurane_times(1)/VB_params(1).dt):(isoflurane_times(1)+isoflurane_step_time)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(0,-.8,length(((isoflurane_times(1)/VB_params(1).dt):(isoflurane_times(1)+isoflurane_step_time)/VB_params(1).dt))));
the_A((isoflurane_times(1)+isoflurane_step_time)/VB_params(1).dt:(isoflurane_times(2)/VB_params(1).dt))=0.2*VB_params(1).stress_0;
the_A((isoflurane_times(2)/VB_params(1).dt):(isoflurane_times(2)+isoflurane_step_time)/VB_params(1).dt)=...
    VB_params(1).stress_0*(1+linspace(-.8,0,length(((isoflurane_times(2)/VB_params(1).dt):(isoflurane_times(2)+isoflurane_step_time)/VB_params(1).dt))));


%%
n_cases=3;
for n=1:n_cases
    %  VB_params(n).E1 brain series
    %  VB_params(n).E2 brain parallel
    %  VB_params(n).eta1 Brain viscosity
    %  VB_params(n).E3 vessel series
    %  VB_params(n).E4 vessel parallel
    %  VB_params(n).eta2  vessel viscosity
    %  VB_params(n).stress_0=2*VB_params(n).stress_bp;
    %  VB_params(n).active_stress=the_A;
    %  VB_params(n).bp_stress=VB_params(1).stress_bp*(one
    VB_params(n).dt=dt; %time step
    VB_params(n).maxt=maxt; %max time
    VB_params(n).stress_bp=(.1333*30); % blood pressure, in kPa, assumed to be constatn
    if n==1
        VB_params(n).description=['pial vessel'];
        VB_params(n).E1=.1;
        VB_params(n).E2=.1;
        VB_params(n).eta1=VB_params(n).E2;
        VB_params(n).E3=15;
        VB_params(n).E4=15;
        VB_params(n).eta2=tau_sm*VB_params(n).E4;
        VB_params(n).stress_0=2*VB_params(n).stress_bp;
        VB_params(n).active_stress=the_A;
        VB_params(n).bp_stress=VB_params(1).stress_bp*(ones(size(VB_params(n).active_stress)));
        
    elseif n==2
        VB_params(n).description=['viscous brain'];
        VB_params(n).E1=10;
        VB_params(n).E2=.1;
        VB_params(n).eta1=1500*VB_params(n).E2;
        VB_params(n).E3=VB_params(1).E3;
        VB_params(n).E4=VB_params(1).E4;
        VB_params(n).eta2=tau_sm*VB_params(n).E4;
        VB_params(n).stress_0=2*VB_params(n).stress_bp;
        VB_params(n).active_stress=the_A;
        VB_params(n).bp_stress=VB_params(1).stress_bp*(ones(size(VB_params(n).active_stress)));
        
    elseif n==3
        VB_params(n).description=['stiff brain'];
        VB_params(n).E1=15;
        VB_params(n).E2=15;
        VB_params(n).eta1=.1*VB_params(n).E2;
        VB_params(n).E3=VB_params(1).E3;
        VB_params(n).E4=VB_params(1).E4;
        VB_params(n).eta2=tau_sm*VB_params(n).E4;
        VB_params(n).stress_0=2*VB_params(n).stress_bp;
        VB_params(n).active_stress=the_A;
        VB_params(n).bp_stress=VB_params(1).stress_bp*(ones(size(VB_params(n).active_stress)));

    end
end

%% plug the tension changes into the various models and calculate the resulting strain changes.
for n=1:n_cases
    [overStruct(n)]=VesselBrainViscoelastic(VB_params(n));
    plotViscoElasticStruct(overStruct(n))
end
%% plot summary data
figure(200)
ax2(1)=subplot(311);
hold off
plot(the_time,(the_A./(the_A(1))),'LineWidth',3)
hold on
plot(the_time,VB_params(n_cases).bp_stress,'LineWidth',3)
ylim([0 1.5])
text(isoflurane_times(1),1.3,'isoflurane')
text(vasomotion_times(1),1.3,'vasomotion')
text(impulse_response_times(1),1.3,'dilation/constriction')
hold off
ylabel('normalized active tension')
ax2(2)=subplot(312);
hold off

for n=1:n_cases
    plot(the_time,sum(overStruct(n).the_strains(1:2,:),1),'LineWidth',3)
    hold on
end
legend( VB_params(1:n_cases).description,'Location','northwest')
ylabel('Total \epsilon','FontSize', 25)
xlabel('time, s')
ax2(3)=subplot(313);
hold off

for n=1:n_cases
    plot(the_time,overStruct(n).the_stresses_viscous(1,:),'LineWidth',3)
    hold on
end

% for n=1:n_cases
%      plot(the_time,overStruct(n).the_stresses(1,:),'LineWidth',3)
% end


legend( VB_params(1:n_cases).description,'Location','northwest')
ylabel('viscous \sigma','FontSize', 25)
xlabel('time, s')


linkaxes(ax2,'x')

%%
function []=plotViscoElasticStruct(VesselBrainStruct)
figure('Name', string(VesselBrainStruct.VB_params.description))
the_ax(1)=subplot(311);
hold off
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_strains)%the_strain2/the_strain2(1)
hold on
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_strains(1,:)+VesselBrainStruct.the_strains(2,:),'LineWidth',3)

legend(['brain series:' num2str(VesselBrainStruct.VB_params.E1)], ['brain parallel:' num2str(VesselBrainStruct.VB_params.E2)],...
    ['vessel series:' num2str(VesselBrainStruct.VB_params.E3)] , ['vessel parallel:' num2str(VesselBrainStruct.VB_params.E4)], 'total')
ylabel('\epsilon')
title(['brain \tau :' num2str(VesselBrainStruct.VB_params.eta1/VesselBrainStruct.VB_params.E2) ...
    ', vessel \tau :' num2str(VesselBrainStruct.VB_params.eta2/VesselBrainStruct.VB_params.E4) ]);

the_ax(2)=subplot(312);
hold off
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_strains(1,:)*VesselBrainStruct.VB_params.E1)
hold on
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_strains(3,:)*VesselBrainStruct.VB_params.E3)
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_stresses_viscous(1,:))
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_stresses_viscous(2,:))
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_stresses(1,:))
plot(VesselBrainStruct.the_time,VesselBrainStruct.the_stresses(3,:))


legend('total brain stress', 'total vessel stress', 'brain viscous stress','vessel viscous stress')

ylabel('\sigma')
xlabel('time,sec')
the_ax(3)=subplot(313);
hold off
plot(VesselBrainStruct.the_time,VesselBrainStruct.VB_params.active_stress)
linkaxes(the_ax, 'x')
xlabel('time, s')
ylabel('Active tension')
end

function [VesselBrainStruct]=VesselBrainViscoelastic(VB_params)

%generate data struct
VesselBrainStruct=struct();
%strains and their derivatives.  ordering is 1:brain series element,
%2:brain parallel element, 3: vessel series element, 4: brain parallel
%element
VesselBrainStruct.the_strains=zeros(4, length(VB_params.active_stress));%length(active_stress));
VesselBrainStruct.the_strainsP=zeros(4, length(VB_params.bp_stress));

% parameters for the differential_equations
syms sigma_b1(t) sigma_b2(t) sigma_sm3(t) sigma_sm4(t) ...
    epsilon_b1(t) epsilon_b2(t) epsilon_sm3(t) epsilon_sm4(t) ...
    A(t) sigma_p(t) ...
    E1s E2s E3s E4s eta1s eta2s; %parameters, s means symbolic
brain_vessel_eqs=[...
    epsilon_b1(t) + epsilon_b2(t) == epsilon_sm3(t)+ epsilon_sm4(t); %both arms move the same
    sigma_b1(t) == epsilon_b1(t)*E1s;
    sigma_sm3(t) == epsilon_sm3(t)*E3s;
    epsilon_sm3*E3s == A(t) + eta2s*diff(epsilon_sm4(t),t) + epsilon_sm4*E4s;
    epsilon_b1*E1s ==  eta1s*diff(epsilon_b2(t),t) + epsilon_b2*E2s;
    sigma_b1(t) + sigma_sm3(t) == sigma_p(t);
    sigma_b1(t) == sigma_b2(t);
    sigma_sm3(t) == sigma_sm4(t) ];
brain_vessel_vars=[sigma_b1(t), sigma_b2(t), sigma_sm3(t), sigma_sm4(t), ...
    epsilon_b1(t), epsilon_b2(t), epsilon_sm3(t), epsilon_sm4(t) ];%

% set up the equations
[brain_vessel_eqs_simple, brain_vessel_vars_simple, ~] = reduceRedundancies(brain_vessel_eqs, brain_vessel_vars);
%sim_params=setdiff(symvar(brain_vessel_eqs_simple),symvar(brain_vessel_vars_simple));
viscoelastic_eq_F=daeFunction(brain_vessel_eqs_simple,brain_vessel_vars_simple,E1s, E2s, E3s, E4s, eta1s, eta2s, A, sigma_p);


% put details of the equations in struct
VesselBrainStruct.brain_vessel_eqs=brain_vessel_eqs;
VesselBrainStruct.brain_vessel_vars=brain_vessel_vars;
VesselBrainStruct.brain_vessel_eqs_simple=brain_vessel_eqs_simple;
VesselBrainStruct.viscoelastic_eq_F=viscoelastic_eq_F;

% handle to the function of system of differential equations
brain_vessel_model_f= @(t,epsilon,epsilonP)...
    viscoelastic_eq_F(t,epsilon,epsilonP, VB_params.E1, VB_params.E2, VB_params.E3,VB_params.E4,...
    VB_params.eta1, VB_params.eta2, VB_params.active_stress(1), VB_params.bp_stress(1));% pass numerica values

%set up ode conditions
ode_options = odeset('RelTol', 10.0^(-4), 'AbsTol', 10.0^(-4));
t0=0;
[y0_new,yp0_new]=decic(brain_vessel_model_f, t0, [0 0 0 0],[0 0 0 0],[0 0 0 0],[1 1 1 1],ode_options);%
VesselBrainStruct.the_strains(:,1)=y0_new;
VesselBrainStruct.the_strainsP(:,1)=yp0_new;

%%
VesselBrainStruct.the_stresses=zeros(size(VesselBrainStruct.the_strains));
VesselBrainStruct.the_stresses_viscous=zeros(2, length(VesselBrainStruct.the_strains));
for the_t=2:length(VesselBrainStruct.the_strains)
    brain_vessel_model_f= @(t,epsilon,epsilonP)...
        viscoelastic_eq_F(t,epsilon,epsilonP, VB_params.E1, VB_params.E2, VB_params.E3,VB_params.E4,...
        VB_params.eta1, VB_params.eta2, VB_params.active_stress(the_t), VB_params.bp_stress(the_t));
    [~,yout]=ode15i(brain_vessel_model_f,[0 VB_params.dt],VesselBrainStruct.the_strains(:, the_t-1),VesselBrainStruct.the_strainsP(:, the_t-1),ode_options);
    VesselBrainStruct.the_strains(:, the_t)=yout(end,:)';
    VesselBrainStruct.the_strainsP(:, the_t)=(VesselBrainStruct.the_strains(:, the_t)-VesselBrainStruct.the_strains(:, the_t-1))/VB_params.dt;
    
end

VesselBrainStruct.VB_params=VB_params;
VesselBrainStruct.the_time=VesselBrainStruct.VB_params.dt:VesselBrainStruct.VB_params.dt:VesselBrainStruct.VB_params.maxt;

VesselBrainStruct.the_stresses(1,:)=VesselBrainStruct.the_strains(1,:)*VB_params.E1;
VesselBrainStruct.the_stresses(2,:)=VesselBrainStruct.the_strains(2,:)*VB_params.E2;
VesselBrainStruct.the_stresses(3,:)=VesselBrainStruct.the_strains(3,:)*VB_params.E3;
VesselBrainStruct.the_stresses(4,:)=VesselBrainStruct.the_strains(4,:)*VB_params.E4;

VesselBrainStruct.the_stresses_viscous(1,:)=VesselBrainStruct.the_strainsP(2,:)*VesselBrainStruct.VB_params.eta1;
VesselBrainStruct.the_stresses_viscous(2,:)=VesselBrainStruct.the_strainsP(4,:)*VesselBrainStruct.VB_params.eta2;


end
